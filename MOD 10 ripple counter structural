module jkff(clr,q,j,k,clk);
input clk,j,k,clr;
output q;reg q;
initial q=0;
always@(posedge clk)
begin 
if(~clr)
q=0;
else
begin
case({j,k})
0:q=q;
1:q=0;
2:q=1;
3:q=~q;
endcase
end
end
endmodule
module ripcount(clk,qout);
input clk;
wire [3:0] q;
output [3:0] qout;
jkff ff1(1,q[0],1,1,clk);
jkff ff2(1,q[1],1,1,~q[0]);
jkff ff3(1,q[2],1,1,~q[1]);
jkff ff4(1,q[3],1,1,~q[2]);
assign qout= (q>=4'b1010)?(q-4'b1010):q;

endmodule
